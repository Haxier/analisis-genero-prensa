pal(seq(0,1, len= 6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
0xCC
p1 <- colorRampPalette(c("red", "blue", "yellow"))
p2 <- colorRampPalette(c("red", "blue", "yellow"))
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue", "green"), alpha = .5)
p3(5)
plot(x, y, pch= 19, col= rgb(0, .5, .5))
plot(x, y, pch= 19, col= rgb(0, .5, .5, .3))
cols <-  brewer.pal(3, "BugGn")
cols <-  brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("points", "smooth"))
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(hwy, data = mpg, color = drv)
qplot(y=hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, color = drv, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~ drv)
qplot(hwy, data = mpg, facets = drv~. , binwidth=2)
qplot(displ, hwy, data = mpg, geom = c("point", "smoth") ,facets = .~drv, method= "loess")
qplot(displ, hwy, data = mpg, geom = c("point", "smooth") ,facets = .~drv, method= "loess")
qplot(displ, hwy, data = mpg, geom = c("point", "smooth") ,facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
sommary(g)
summary(g)
g+ geom_point()
g+ geom_point()+ geom_smooth()
g+ geom_point()+ geom_smooth(method = "lm")
g+ geom_point()+ geom_smooth(method = "lm")+ facet_grid( . ~ drv)
g+ geom_point()+ geom_smooth(method = "lm")+ facet_grid( . ~ drv) + ggtitle("Swirl Rules!")
g+ geom_point(color= "pink", size=4, alpha= 1/2)
g+ geom_point(size=4, alpha= 1/2, aes(color=drv))
g+ geom_point(aes(color=drv))+ labs(title= "Swirl Rules!") + labs(x="Displacement", y= "Hwy Mileage")
g+ geom_point(size=2, alpha= 1/2, aes(color=drv)) + geom_smooth(size=4, linetype=3, method= "lm")
g+ geom_point(size=2, alpha= 1/2, aes(color=drv)) + geom_smooth(size=4, linetype=3, method= "lm", se=FALSE)
g+ geom_point(aes(color=drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(x= myx, y= myy))
g+geom_line()
g+geom_line()+ ylim(-3,3)
g+geom_line()+ coord_cartesian(c(-3,3))
g+geom_line()+ coord_cartesian(ylim=c(-3,3))
g <- ggplot(mpg, aes(x=displ, y=hwy, color= factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE)
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se= FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv ~ cyl, margins = TRUE) + geom_smooth(method = "lm", se= FALSE, size=2, color="black") + labs( x= "Displacement", y= "Highway Mileage", title= "Swirl Rules!")
str(diamonds)
qplot(price, data= diamonds)
range(diamonds$price)
qplot(price, data= diamonds, binwidth= 18497/30)
brk
counts
qplot(price, data= diamonds, binwidth= 18497/30, fill= cut)
qplot(price, data= diamonds, geom = "density")
qplot(price, data= diamonds, geom = "density", color= cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape= cut)
qplot(carat, price, data = diamonds, color= cut)
qplot(carat, price, data = diamonds, color= cut, geom= c("point", "smooth"), method="lm")
qplot(carat, price, data = diamonds, color= cut, geom= c("point", "smooth"))
qplot(carat, price, data = diamonds, color= cut) +  geom_smooth(c("point", "smooth"))
qplot(carat, price, data = diamonds, color= cut) +  geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color= cut) +  geom_smooth(method = "lm") + facet_grid(.~cut)
qplot(carat, price, data = diamonds, color= cut, facets = .~cut) +  geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha= 1/3)
cutpoints <-  quantile(diamonds$carat, seq(0,1,length=4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha= 1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
g + geom_point(alpha= 1/3) + facet_grid(cut ~ car2) + geom_smooth(method = "lm", size= 3, color= "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid( .~ cut)
install.packages("rcolorbrewer")
install.packages("RColorBrewer")
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendrogram(hc))
abline(h=1.5, col= "blue")
abline(h=4, col= "red")
abline(h=.4, col= "red")
5
5
12
abline(h=.05, col= "green")
dist(dFsm)
plot(hc)
hc
heatmap(dataMatrix, col= cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
cmat
points(cx, cy, col=c("red", "orange", "purple"), pch=3, cex=2, lwd=2)
mdist(x,y, cx, cy)
apply(distTmp, 2, which.min)
points(x, y, pch=19, cex=2, col= cols1)
points(x, y, pch=19, cex=2, col= cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y,newCx, newCy)
apply(distTmp2, 2, which.min)
points(x, y, pch=19, cex=2, col=cols1[newClust2])
tapply(y, newClust2, mean)
tapply(x, newClust2, mean)
tapply(y, newClust2, mean)
points(finalCx, finalCy, col=cols1, pcg=9, cex=2, lwd=2)
points(finalCx, finalCy, col=cols1, pch=9, cex=2, lwd=2)
kmeans(dataFrame, centers = 3)
kmObj$iter
plot(x,y, col=kmObj$cluster, pch=19, cex=2 )
points(kmObj$centers, col= c("black", "red", "green"), pch=3, cex=3, lwd=3)
polt(x,y, col= kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col= kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col= kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
plot(x,y, col= kmeans(dataFrame, 6)$cluster, pch=19, cex=2)
head(dataMatrix)
heatmap(dataMatrix)
myedit("addPatt.R")
source("addPatt.R", local = TRUE)
heatmap(dataMatrix)
mat
svd(mat)
u
matu %*% diag %*% t(matv)
svd(scale(mat))
prcomp(scale(mat))
svd$v[,1]
svd1$v[,1]
svd1$d
head(constantMatrix)
svd2$d
svd2$v
svd2$v[, 1:2]
svd2$d
dim(faceData)
a1 <-  (svd1$u[,1]*svd1$d[1])%*%svd1$v[,1]
a1 <-  (svd1$u[,1]*svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <-  svd1$u[,1:2] %*% diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[,1:5] %*% diag(svd1$d[1:5]) %*% t(svd1$v[,1:5]))
myImage(svd1$u[,1:10] %*% diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
exit
exit()
??
.
library(swirl)
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, "|", fixed=TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(in.na(x0))
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), format= "%Y%m%d")
head(dates)
hist(dates[nevative], "month")
hist(dates[negative], "month")
str(site0)
intersect(site0, site1)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, State.Code==36 & country.site %in% both)
cnt0 <- subset(pm0, State.Code==36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code==36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code==63 & Site.ID==2008)
pm1sub <- subset(cnt1, County.Code==63 & Site.ID==2008)
x0sub <-  pm0sub$Sample.Value
x1sub <-  pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sub$Date), format= "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), format= "%Y%m%d")
par(mfrow=c(1,2), mar= c(4,4,2,1))
plot(dates0, x0sub, pch=20)
abline(h=median(x0sub, na.rm = TRUE), lwd=2)
plot(dates1, x1sub, pch=20)
abline(h=median(x1sub, na.rm = TRUE), lwd=2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm= TRUE))
str(nm0)
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm= TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state= names(mn0), mean= mn0)
d1 <- data.frame(state= names(mn1), mean= mn1)
mrg <-  merge(mn0, mn1, by= "state")
mrg <-  merge(d0, d1, by= "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[,3] ))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x  <mrg$mean.y , ]
install.packages("knitr")
install.packages("xtable")
library(swirl)
install_from_swirl("Statistical Inference")
swirl()
1- 1/12
deck
52
4/52
0
12/52
2/51
1.6*0.8
1.6*0.8/2
0.64
mydpf
mypdf()
mypdf
?integrate
integrate(mypdf, lower = 0, upper = 1.6)
sqrt(200)
2
sqrt(2)
0.997*0.001
(1-0.985)*0.001
(1-0.985)*(1-0.001)
0.000997 / 0.000997*0.014985
0.000997 / 0.000997+0.014985
0.000997 / (0.000997+0.014985)
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
.5 * (edh + edl)
integrate(myfunc, 0,2)
spop
mean(spop)
allsam
apply(allsam, 1, mean)
mean(smeans)
sqrt(0.5)
sqrt(0.75)
sqrt(0.975)
52/4
.88*.95
.07*.05
.836/(.836*.0035)
.836/(.836+.0035)
.75*.3
(1-.52)*(1-.3)
.225/(.225+.336)
library(swirl)
swirl()
dice_sqr
ex2_fair <- dice_sqr*dice_fair
ex2_fair <- sum(dice_sqr*dice_fair)
ex2_fair/sqrt(3.5)
ex2_fair-3.5^2
sum(dice_sqr*dice_high) - edh^2
sd(apply(matrix(rnorm(10000), 1000), 1, mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(runif(10000), 1000), 1, mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000), 4), 1, mean))
sd(apply(matrix(rpois(10000, 4), 1000), 1, mean))
sd(apply(matrix(sample(1:0), 1000), 1, mean))
1/(2*sqrt(10))
sd(apply(matrix(sample(1:0, 10000, TRUE), 1000), 1, mean))
sd(apply(matrix(sample(0:1, 10000, TRUE), 1000), 1, mean))
library(swirl)
swirl()
choose(5,3) * .8^2*.2^3
choose(5,4) * .8^1*.2^4
choose(5,5) * .8^0*.2^5
0.0512+ 0.0064 + 0.00032
choose(5,3)*(.8)^3*(.2)^(5-3)
choose(5,4)*(.8)^4*(.2)^(5-4)
choose(5,5)*(.8)^5*(.2)^(5-5)
0.2048+0.4096 + 0.32768
?pbinom
pbinom(q= 2, size = 5, prob = .8, lower.tail = FALSE)
qnorm(.1)
0
?qnorm
qnorm(q=.975, mean = 3, sd=2)
qnorm(q=.975, mean = 3, sd=2, lower.tail = FALSE)
qnorm(.975, mean = 3, sd=2, lower.tail = FALSE)
qnorm(.975, mean = 3, sd=2)
3+ 2*1,96
3+ 2*1.96
pnorm(1200, mean = 1020, sd= 50, lower.tail = FALSE)
pnorm(1200, lower.tail = FALSE)
pnorm((1200-1020)/50, lower.tail = FALSE)
qnorm(.75, mean = 1020, sd = 50)
.53
.53
ppois(q=3, lambda = (2.5*4))
ppois(3, 2.5*4)
pbinom(5, 1000, .01)
ppois(5, 1000*.01)
coinPlot(10)
coinplot
coinPlot
coinPlot(1000)
coinPlot(10000)
qnorm(.95)
2
.6 + c(-1,1)*qnorm(.975)*sqrt(.6*.4/100)
binom.test(60,100)$conf.int
mywald(.2)
ACCompar(20)
lamb <- 5/94.32
lamb + c(-1,1)*qnorm(.975)*sqrt(lamb/94.32)
poisson.test(5, 94.32)$conf
(-4^2)*.2 + .8
(4^2)*.2 + .8
-4*.2 + .8
pnorm(5, mean = 11, sd = 2)
ppois(40, 9*5)
qnorm(.05, 100, 10)
qnorm(.95, 100, 10)
qnorm(.05, 100, 10, lower.tail = FALSE)
?ppois
ppois(20, 16.5*2)
poisson.test(1, 10*60)
poisson.test(1, 60)
poisson.test(1, 10)
pnorm(70, mean= 80, sd = 10)
qnorm(.95, 1100, 75)
qnorm(.95, 1100, 75/10)
pbinom(3, size = 5, .5, lower.tail = FALSE)
ppois(10, 15)
setwd("~/Documents/DataScience/analisis_genero_prensa")
eldiario <- read_html("http://eldiario.es")
firma  <- eldiario %>% html_nodes(".dateline a") %>% html_text()
#limpiar datos
autores <- gsub("\n", "", firma, fixed = TRUE)
autores <- gsub("\t", "", autores, fixed = TRUE)
#quitar numeros
autores <- gsub("[0-9]", "", autores)
library(googlesheets)
library(lubridate)
library(dplyr)
library(XML)
library(rvest)
eldiario <- read_html("http://eldiario.es")
firma  <- eldiario %>% html_nodes(".dateline a") %>% html_text()
autores <- gsub("\n", "", firma, fixed = TRUE)
autores <- gsub("\t", "", autores, fixed = TRUE)
#quitar numeros
autores <- gsub("[0-9]", "", autores)
firma
firma  <- eldiario %>% html_nodes(".dateline") %>% html_text()
#limpiar datos
autores <- gsub("\n", "", firma, fixed = TRUE)
autores <- gsub("\t", "", autores, fixed = TRUE)
#quitar numeros
autores <- gsub("[0-9]", "", autores)
firma
autores
limpio <- gsub("{3,} ", "", autores, fixed = TRUE)
limpio
limpio <- gsub("{3,}[ ]", "", autores, fixed = TRUE)
limpio
limpio <- gsub("{3,}[ ]", "", autores)
limpio
limpio <- gsub("{3,}[ ]", " ", autores)
limpio
limpio <- gsub("{3,}[ ]", "", autores)
limpio
limpio <- gsub("{3,}[ ]", " ", autores)
limpio
limpio <- gsub("[[:space:]]", "", autores)
limpio
limpio <- gsub("{3,}[[:space:]]", "", autores)
limpio
limpio <- gsub("[{3,}[:space:]]", "", autores)
limpio
limpio <- gsub("{3,}[ ]", " ", autores)
limpio
limpio <- gsub("[{3,}[:blank:]]", "", autores)
limpio
library(stringr)
limpio <- gsub("{3,}[ ]", " ", autores)
limpio
str_replace(gsub("\\s+", " ", str_trim(limpio)), "B", "b")
eldiario <- read_html("http://eldiario.es")
firma  <- eldiario %>% html_nodes(".dateline a") %>% html_text()
#limpiar datos
firma <- gsub("\n", "", firma, fixed = TRUE)
firma <- gsub("\t", "", firma, fixed = TRUE)
#quitar numeros
firma <- gsub("[0-9]", "", firma)
#quitar espacios que sobran
firma <- str_replace(gsub("\\s+", " ", str_trim(firma)), "B", "b")
firma
eldiario <- read_html("http://eldiario.es")
firma  <- eldiario %>% html_nodes(".dateline") %>% html_text()
#limpiar datos
firma <- gsub("\n", "", firma, fixed = TRUE)
firma <- gsub("\t", "", firma, fixed = TRUE)
#quitar numeros
firma <- gsub("[0-9]", "", firma)
#quitar espacios que sobran
firma <- str_replace(gsub("\\s+", " ", str_trim(firma)), "B", "b")
firma
multiples <- firma[grep(" / ", firma, fixed = TRUE)]
individuales <- firma[ -grep(" / ", firma, fixed = TRUE)]
individuales
multiples
firma
gsub("\\s\\-\\s*\\w*$", "", firma)
eldiario <- read_html("http://eldiario.es")
firma  <- eldiario %>% html_nodes(".dateline") %>% html_text()
#limpiar datos
firma <- gsub("\n", "", firma, fixed = TRUE)
firma <- gsub("\t", "", firma, fixed = TRUE)
#quitar numeros
firma <- gsub("[0-9]", "", firma)
#quitar espacios que sobran
firma <- str_replace(gsub("\\s+", " ", str_trim(firma)), "B", "b")
#quitar delegación
firma <- gsub("\\s\\-\\s*\\w*$", "", firma)
firma
multiples <- firma[grep(" / ", firma, fixed = TRUE)]
individuales <- firma[ -grep(" / ", firma, fixed = TRUE)]
# separar multiples autores y analizar si son de un genero o mixtos
multiples <- strsplit(multiples, " | ")
source("AutoresElDiario.R")
source("AutoresElDiario.R")
analizar_fechasD()
source("AutoresElDiario.R")
analizar_fechasD()
source("AutoresElDiario.R")
analizar_fechasD()
eldiario <- read_html("http://eldiario.es")
firma  <- eldiario %>% html_nodes(".dateline") %>% html_text()
#limpiar datos
firma <- gsub("\n", "", firma, fixed = TRUE)
firma <- gsub("\t", "", firma, fixed = TRUE)
#quitar numeros
firma <- gsub("[0-9]", "", firma)
#quitar espacios que sobran
firma <- str_replace(gsub("\\s+", " ", str_trim(firma)), "B", "b")
#quitar delegación
firma <- gsub("\\s\\-\\s*\\w*$", "", firma)
# separar en grupos <- mujeres, hombres y multiples autores
multiples <- firma[grep(" / ", firma, fixed = TRUE)]
individuales <- firma[ -grep(" / ", firma, fixed = TRUE)]
# separar multiples autores y analizar si son de un genero o mixtos
multiples <- strsplit(multiples, " | ")
# pasar los autores a nombres de pila
multiples <- lapply(multiples, nombres_pila_multiples)
split_autores <- strsplit(individuales, " ")
individuales <- sapply(split_autores, firstelement)
autores <- append(multiples, individuales)
autores
source("AutoresElDiario.R")
analizar_fechasD()
